<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>task8-springrmi</display-name>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>

    <!-- 加载通用初始化文件,该文件中配置的bean是由整个程序共享的 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value> classpath:remote-context-1.xml,
                        classpath:remote-context-2.xml,
                        classpath:otherAPI-context.xml
        </param-value>
    </context-param>
    <!-- 配置加载上下文监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--<listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>-->
    <!-- 字符集过滤器 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置过滤器,获取隐藏表单中的真正的HTTP方法 -->
    <filter>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
        <init-param>
            <param-name>methodParam</param-name>
            <param-value>requestMethod</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 将所有由forward方法转发的HTTP请求转换为GET请求 -->
    <filter>
        <filter-name>getMethodConvertingFilter</filter-name>
        <filter-class>com.putaoteng.task8.utils.authentication.GetMethodConvertingFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>getMethodConvertingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <!-- 这个配置是关键,它的含义过滤所有通过forward方法传过来的请求,意思是只要是通过forward方法传递来的请求,都执行filter的功能
                这个标签如果不配置,默认采用REQUEST,即所有请求都过滤 -->
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <!-- 配置前端控制器,当收到请求后,加载前端控制器 -->
    <servlet>
        <servlet-name>task8</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:dispatcher-servlet.xml</param-value>
        </init-param>
    </servlet>

    <!-- 请求匹配规则,/为除了静态页面,其余全部拦截 -->
    <servlet-mapping>
        <servlet-name>task8</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>